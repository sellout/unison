roots = [
    '''^Main\.main$''',
    '''^Paths_.*''',
    # All of the existing weeds that need to be reviewed.
    '''^U\.Codebase\.Branch\.Type\.hoist$''',
    '''^U\.Codebase\.Branch\.Type\.hoistCausalBranch$''',
    '''^U\.Codebase\.Causal\.emap$''',
    '''^U\.Codebase\.Causal\.hoist$''',
    '''^U\.Codebase\.Causal\.Squash\.squashCausal$''',
    '''^U\.Codebase\.Decl\.rmap$''',
    '''^U\.Codebase\.Reference\._RReferenceReference$''',
    '''^U\.Codebase\.Referent\.typeRef_$''',
    '''^U\.Codebase\.Referent\.termRef_$''',
    '''^U\.Codebase\.Referent\.toReference$''',
    '''^U\.Codebase\.Referent\.toReferenceId$''',
    '''^U\.Codebase\.Referent\.toTermReference$''',
    '''^U\.Codebase\.Referent\.toShortHash$''',
    '''^U\.Codebase\.Sqlite\.Branch\.Full\.branchCausalHashes_$''',
    '''^U\.Codebase\.Sqlite\.Branch\.Full\.t_$''',
    '''^U\.Codebase\.Sqlite\.Branch\.Full\.h_$''',
    '''^U\.Codebase\.Sqlite\.Branch\.Full\.p_$''',
    '''^U\.Codebase\.Sqlite\.Branch\.Full\.c_$''',
    '''^U\.Codebase\.Sqlite\.Decode\.decodeTermElementWithType$''',
    '''^U\.Codebase\.Sqlite\.LocalIds\.t_$''',
    '''^U\.Codebase\.Sqlite\.LocalIds\.h_$''',
    '''^U\.Codebase\.Sqlite\.NameLookups\.reversedNameToNamespaceText$''',
    '''^U\.Codebase\.Sqlite\.NameLookups\.reversedNameToPathSegments$''',
    '''^U\.Codebase\.Sqlite\.Operations\.loadCausalHashAtPath$''',
    '''^U\.Codebase\.Sqlite\.Operations\.expectCausalHashAtPath$''',
    '''^U\.Codebase\.Sqlite\.Operations\.loadCausalBranchAtPath$''',
    '''^U\.Codebase\.Sqlite\.Operations\.loadBranchAtPath$''',
    '''^U\.Codebase\.Sqlite\.Operations\.c2sConstructorType$''',
    '''^U\.Codebase\.Sqlite\.Operations\.diffPatch$''',
    '''^U\.Codebase\.Sqlite\.Operations\.loadTermWithTypeByReference$''',
    '''^U\.Codebase\.Sqlite\.Operations\.loadDbBranchByCausalHashId$''',
    '''^U\.Codebase\.Sqlite\.Operations\.expectDbBranchByCausalHashId$''',
    '''^U\.Codebase\.Sqlite\.Operations\.saveDbBranch$''',
    '''^U\.Codebase\.Sqlite\.Operations\.before$''',
    '''^U\.Codebase\.Sqlite\.Operations\.declReferencesByPrefix$''',
    '''^U\.Codebase\.Sqlite\.Operations\.namespaceHashesByPrefix$''',
    '''^U\.Codebase\.Sqlite\.Operations\.derivedDependencies$''',
    '''^U\.Codebase\.Sqlite\.Operations\.buildNameLookupForBranchHash$''',
    '''^U\.Codebase\.Sqlite\.Operations\.associateNameLookupMounts$''',
    '''^U\.Codebase\.Sqlite\.Operations\.termNamesBySuffix$''',
    '''^U\.Codebase\.Sqlite\.Operations\.typeNamesBySuffix$''',
    '''^U\.Codebase\.Sqlite\.Operations\.refsForExactName$''',
    '''^U\.Codebase\.Sqlite\.Operations\.termRefsForExactName$''',
    '''^U\.Codebase\.Sqlite\.Operations\.typeRefsForExactName$''',
    '''^U\.Codebase\.Sqlite\.Operations\.recursiveTermNameSearch$''',
    '''^U\.Codebase\.Sqlite\.Operations\.recursiveTypeNameSearch$''',
    '''^U\.Codebase\.Sqlite\.Operations\.appendProjectReflog$''',
    '''^U\.Codebase\.Sqlite\.Operations\.deleteNameLookupsExceptFor$''',
    '''^U\.Codebase\.Sqlite\.Operations\.tryGetSquashResult$''',
    '''^U\.Codebase\.Sqlite\.Operations\.saveSquashResult$''',
    '''^U\.Codebase\.Sqlite\.Operations\.fuzzySearchDefinitions$''',
    '''^U\.Codebase\.Sqlite\.Operations\.stripPrefixFromNamedRef$''',
    '''^U\.Codebase\.Sqlite\.Operations\.expectProjectAndBranchNames$''',
    '''^U\.Codebase\.Sqlite\.Patch\.Format\.localPatchToPatch'$''',
    '''^U\.Codebase\.Sqlite\.Patch\.Full\.patchT_$''',
    '''^U\.Codebase\.Sqlite\.ProjectReflog\.project_$''',
    '''^U\.Codebase\.Sqlite\.ProjectReflog\.branch_$''',
    '''^U\.Codebase\.Sqlite\.Queries\.expectCausalByCausalHash$''',
    '''^U\.Codebase\.Sqlite\.Queries\.expectBranchHash$''',
    '''^U\.Codebase\.Sqlite\.Queries\.expectBranchHashForCausalHash$''',
    '''^U\.Codebase\.Sqlite\.Queries\.expectTextCheck$''',
    '''^U\.Codebase\.Sqlite\.Queries\.loadPatchObject$''',
    '''^U\.Codebase\.Sqlite\.Queries\.expectTermObject$''',
    '''^U\.Codebase\.Sqlite\.Queries\.expectObjectWithHashIdAndType$''',
    '''^U\.Codebase\.Sqlite\.Queries\.expectObjectIdForAnyHashId$''',
    '''^U\.Codebase\.Sqlite\.Queries\.expectHashIdsForObject$''',
    '''^U\.Codebase\.Sqlite\.Queries\.hashIdWithVersionForObject$''',
    '''^U\.Codebase\.Sqlite\.Queries\.saveCausalParents$''',
    '''^U\.Codebase\.Sqlite\.Queries\.loadCausalParentsByHash$''',
    '''^U\.Codebase\.Sqlite\.Queries\.loadWatchKindsByReference$''',
    '''^U\.Codebase\.Sqlite\.Queries\.getTypeReferenceForReferent$''',
    '''^U\.Codebase\.Sqlite\.Queries\.getTypeReferencesForComponent$''',
    '''^U\.Codebase\.Sqlite\.Queries\.getTypeMentionsReferencesForComponent$''',
    '''^U\.Codebase\.Sqlite\.Queries\.fixupTypeIndexRow$''',
    '''^U\.Codebase\.Sqlite\.Queries\.getDependenciesForDependent$''',
    '''^U\.Codebase\.Sqlite\.Queries\.getDependencyIdsForDependent$''',
    '''^U\.Codebase\.Sqlite\.Queries\.namespaceHashIdByBase32Prefix$''',
    '''^U\.Codebase\.Sqlite\.Queries\.copyScopedNameLookup$''',
    '''^U\.Codebase\.Sqlite\.Queries\.deleteNameLookup$''',
    '''^U\.Codebase\.Sqlite\.Queries\.trackNewBranchHashNameLookup$''',
    '''^U\.Codebase\.Sqlite\.Queries\.deleteNameLookupsExceptFor$''',
    '''^U\.Codebase\.Sqlite\.Queries\.insertScopedTermNames$''',
    '''^U\.Codebase\.Sqlite\.Queries\.insertScopedTypeNames$''',
    '''^U\.Codebase\.Sqlite\.Queries\.removeScopedTermNames$''',
    '''^U\.Codebase\.Sqlite\.Queries\.removeScopedTypeNames$''',
    '''^U\.Codebase\.Sqlite\.Queries\.termNamesBySuffix$''',
    '''^U\.Codebase\.Sqlite\.Queries\.typeNamesBySuffix$''',
    '''^U\.Codebase\.Sqlite\.Queries\.termRefsForExactName$''',
    '''^U\.Codebase\.Sqlite\.Queries\.typeRefsForExactName$''',
    '''^U\.Codebase\.Sqlite\.Queries\.recursiveTermNameSearch$''',
    '''^U\.Codebase\.Sqlite\.Queries\.recursiveTypeNameSearch$''',
    '''^U\.Codebase\.Sqlite\.Queries\.associateNameLookupMounts$''',
    '''^U\.Codebase\.Sqlite\.Queries\.checkBranchExistsForCausalHash$''',
    '''^U\.Codebase\.Sqlite\.Queries\.projectExists$''',
    '''^U\.Codebase\.Sqlite\.Queries\.loadProjectAndBranchNames$''',
    '''^U\.Codebase\.Sqlite\.Queries\.loadRemoteProject$''',
    '''^U\.Codebase\.Sqlite\.Queries\.setRemoteProjectName$''',
    '''^U\.Codebase\.Sqlite\.Queries\.loadRemoteBranch$''',
    '''^U\.Codebase\.Sqlite\.Queries\.setRemoteProjectBranchName$''',
    '''^U\.Codebase\.Sqlite\.Queries\.toReversedName$''',
    '''^U\.Codebase\.Sqlite\.Queries\.fuzzySearchTerms$''',
    '''^U\.Codebase\.Sqlite\.Queries\.fuzzySearchTypes$''',
    '''^U\.Codebase\.Sqlite\.Queries\.prepareFuzzyQuery$''',
    '''^U\.Codebase\.Sqlite\.Queries\.tryGetSquashResult$''',
    '''^U\.Codebase\.Sqlite\.Queries\.saveSquashResult$''',
    '''^U\.Codebase\.Sqlite\.Serialization\.getTypeFromTermAndType$''',
    '''^U\.Codebase\.Sqlite\.Serialization\.lookupTermElement$''',
    '''^U\.Codebase\.Sqlite\.Serialization\.decomposeWatchFormat$''',
    '''^U\.Codebase\.Sqlite\.Serialization\.recomposeWatchFormat$''',
    '''^U\.Codebase\.Sync\.transformSync$''',
    '''^U\.Codebase\.Sync\.transformProgress$''',
    '''^U\.Codebase\.Term\.rmapPattern$''',
    '''^U\.Codebase\.Term\.dependencies$''',
    '''^U\.Codebase\.Type\.typeD2T$''',
    '''^U\.Util\.Serialization\.getFromBytes$''',
    '''^U\.Util\.Serialization\.getFromFile$''',
    '''^U\.Util\.Serialization\.getFromFile'$''',
    '''^U\.Util\.Serialization\.putWithParentDirs$''',
    '''^U\.Util\.Serialization\.putShortText$''',
    '''^U\.Util\.Serialization\.getShortText$''',
    '''^U\.Util\.Serialization\.putShortByteString$''',
    '''^U\.Util\.Serialization\.getShortByteString$''',
    '''^U\.Util\.Serialization\.lookupFramedArray$''',
    '''^U\.Util\.Term\.text$''',
    '''^Unison\.Util\.Alphabetical\.sortAlphabeticallyOn$''',
    '''^IntegrationTests\.ArgumentParsing\.defaultArgs$''',
    '''^ArgParse\.runDesc$''',
    '''^ArgParse\.readAbsolutePath$''',
    '''^ArgParse\.readPath'$''',
    '''^EasyTest\.expectJust$''',
    '''^EasyTest\.rerun$''',
    '''^EasyTest\.note'$''',
    '''^EasyTest\.bool$''',
    '''^EasyTest\.int$''',
    '''^EasyTest\.double$''',
    '''^EasyTest\.word$''',
    '''^EasyTest\.char'$''',
    '''^EasyTest\.double'$''',
    '''^EasyTest\.word'$''',
    '''^EasyTest\.word8'$''',
    '''^EasyTest\.pair$''',
    '''^EasyTest\.mapOf$''',
    '''^EasyTest\.mapsOf$''',
    '''^EasyTest\.skip$''',
    '''^EasyTest\.fork$''',
    '''^EasyTest\.fork'$''',
    '''^System\.Path\.fileList$''',
    '''^U\.Codebase\.Branch\.Diff\.hoistTreeDiff$''',
    '''^U\.Codebase\.Branch\.Diff\.nameBasedDiff$''',
    '''^U\.Codebase\.Projects\.inferDependencyMounts$''',
    '''^Unison\.ABT\.wrap$''',
    '''^Unison\.ABT\.wrap'$''',
    '''^Unison\.ABT\.annotate$''',
    '''^Unison\.ABT\.absr$''',
    '''^Unison\.ABT\.absr'$''',
    '''^Unison\.ABT\.cycler'$''',
    '''^Unison\.ABT\.cycler$''',
    '''^Unison\.ABT\.fresh$''',
    '''^Unison\.ABT\.occurrences$''',
    '''^Unison\.ABT\.find'$''',
    '''^Unison\.ABT\.Normalized\.transform$''',
    '''^Unison\.Builtin\.constructorType$''',
    '''^Unison\.Builtin\.termRefTypeReferences$''',
    '''^Unison\.Builtin\.Decls\.testResultListRef$''',
    '''^Unison\.Builtin\.Decls\.ioErrorRef$''',
    '''^Unison\.Builtin\.Decls\.tlsSignedCertRef$''',
    '''^Unison\.Builtin\.Decls\.tlsPrivateKeyRef$''',
    '''^Unison\.Builtin\.Decls\.filePathRef$''',
    '''^Unison\.Builtin\.Decls\.okConstructorReferent$''',
    '''^Unison\.Builtin\.Decls\.failConstructorReferent$''',
    '''^Unison\.Builtin\.Decls\.ioErrorType$''',
    '''^Unison\.Builtin\.Decls\.filePathType$''',
    '''^Unison\.Builtin\.Decls\.tlsSignedCertType$''',
    '''^Unison\.Cli\.Monad\.withE$''',
    '''^Unison\.Cli\.MonadUtils\.getCurrentProjectName$''',
    '''^Unison\.Cli\.MonadUtils\.getCurrentProjectBranchName$''',
    '''^Unison\.Cli\.MonadUtils\.resolvePath'ToAbsolute$''',
    '''^Unison\.Cli\.MonadUtils\.resolveAbsBranchId$''',
    '''^Unison\.Cli\.MonadUtils\.resolveAbsBranchIdV2$''',
    '''^Unison\.Cli\.MonadUtils\.resolveBranchId$''',
    '''^Unison\.Cli\.MonadUtils\.resolveBranchIdToAbsBranchId$''',
    '''^Unison\.Cli\.MonadUtils\.assertNoBranchAtPath'$''',
    '''^Unison\.Cli\.MonadUtils\.stepAtM$''',
    '''^Unison\.Cli\.MonadUtils\.stepManyAtM$''',
    '''^Unison\.Cli\.NamesUtils\.currentProjectRootNames$''',
    '''^Unison\.Cli\.Pretty\.prettyWriteRemoteNamespace$''',
    '''^Unison\.Cli\.Pretty\.shareOrigin$''',
    '''^Unison\.Cli\.Pretty\.prettyBranchId$''',
    '''^Unison\.Cli\.Pretty\.prettyCausalHash$''',
    '''^Unison\.Cli\.Pretty\.prettyDeclPair$''',
    '''^Unison\.Cli\.Pretty\.displayBranchHash$''',
    '''^Unison\.Cli\.ProjectUtils\.justTheIds$''',
    '''^Unison\.Cli\.ProjectUtils\.justTheIds'$''',
    '''^Unison\.Cli\.ProjectUtils\.loadRemoteProjectBranchByName$''',
    '''^Unison\.Cli\.ProjectUtils\.loadRemoteProjectBranchByNames$''',
    '''^Unison\.Cli\.ProjectUtils\.expectRemoteProjectBranchByTheseNames$''',
    '''^Unison\.Cli\.TypeCheck\.typecheckTerm$''',
    '''^Unison\.Codebase\.filterTermsByReferentHavingType$''',
    '''^Unison\.Codebase\.filterTermsByReferentHavingTypeByReference$''',
    '''^Unison\.Codebase\.Branch\.namespaceStats$''',
    '''^Unison\.Codebase\.Branch\.before$''',
    '''^Unison\.Codebase\.Branch\.toList0$''',
    '''^Unison\.Codebase\.Branch\.replacePatch$''',
    '''^Unison\.Codebase\.Branch\.deletePatch$''',
    '''^Unison\.Codebase\.Branch\.children0$''',
    '''^Unison\.Codebase\.Branch\.Type\.deepEdits$''',
    '''^Unison\.Codebase\.BranchUtil\.getBranch$''',
    '''^Unison\.Codebase\.BranchUtil\.makeSetBranch$''',
    '''^Unison\.Codebase\.Causal\.stepDistinct$''',
    '''^Unison\.Codebase\.Causal\.Type\.before$''',
    '''^Unison\.Codebase\.CodeLookup\.transitiveDependencies$''',
    '''^Unison\.Codebase\.Editor\.DisplayObject\.toMaybe$''',
    '''^Unison\.Codebase\.Editor\.DisplayObject\.termDisplayObjectLabeledDependencies$''',
    '''^Unison\.Codebase\.Editor\.DisplayObject\.typeDisplayObjectLabeledDependencies$''',
    '''^Unison\.Codebase\.Editor\.HandleInput\._searchBranchPrefix$''',
    '''^Unison\.Codebase\.Editor\.HandleInput\.TermResolution\.lookupCon$''',
    '''^Unison\.Codebase\.Editor\.HandleInput\.TermResolution\.resolveTerm$''',
    '''^Unison\.Codebase\.Editor\.HandleInput\.TermResolution\.resolveCon$''',
    '''^Unison\.Codebase\.Editor\.HandleInput\.TermResolution\.resolveTermRef$''',
    '''^Unison\.Codebase\.Editor\.RemoteRepo\.printWriteRemoteNamespace$''',
    '''^Unison\.Codebase\.Editor\.SlurpComponent\.difference$''',
    '''^Unison\.Codebase\.Editor\.SlurpComponent\.intersection$''',
    '''^Unison\.Codebase\.Editor\.UriParser\.parseReadShareLooseCode$''',
    '''^Unison\.Codebase\.Init\.initCodebaseAndExit$''',
    '''^Unison\.Codebase\.Patch\.labeledDependencies$''',
    '''^Unison\.Codebase\.Patch\.isEmpty$''',
    '''^Unison\.Codebase\.Patch\.allReferences$''',
    '''^Unison\.Codebase\.Patch\.conflicts$''',
    '''^Unison\.Codebase\.Path\.relPath_$''',
    '''^Unison\.Codebase\.Path\.isRelative$''',
    '''^Unison\.Codebase\.Path\.unsplitAbsolute$''',
    '''^Unison\.Codebase\.Path\.relativeEmpty$''',
    '''^Unison\.Codebase\.Path\.ancestors$''',
    '''^Unison\.Codebase\.Path\.snoc$''',
    '''^Unison\.Codebase\.Path\.unsnoc$''',
    '''^Unison\.Codebase\.Path\.unsafeParseText'$''',
    '''^Unison\.Codebase\.Path\.Parse\.pathP'$''',
    '''^Unison\.Codebase\.ProjectPath\.toText$''',
    '''^Unison\.Codebase\.Serialization\.getFromBytes$''',
    '''^Unison\.Codebase\.Serialization\.getFromFile$''',
    '''^Unison\.Codebase\.Serialization\.getFromFile'$''',
    '''^Unison\.Codebase\.Serialization\.putBytes$''',
    '''^Unison\.Codebase\.Serialization\.putWithParentDirs$''',
    '''^Unison\.Codebase\.ShortCausalHash\.toString$''',
    '''^Unison\.Codebase\.ShortCausalHash\.toHash$''',
    '''^Unison\.Codebase\.SqliteCodebase\.copyCodebase$''',
    '''^Unison\.Codebase\.SqliteCodebase\.Branch\.Dependencies\.to'$''',
    '''^Unison\.Codebase\.SqliteCodebase\.Branch\.Dependencies\.fromBranch$''',
    '''^Unison\.Codebase\.SqliteCodebase\.Branch\.Dependencies\.fromBranch0$''',
    '''^Unison\.Codebase\.SqliteCodebase\.Conversions\.constructorType1to2$''',
    '''^Unison\.Codebase\.SqliteCodebase\.Migrations\.MigrateSchema1To2\._TermReference$''',
    '''^Unison\.Codebase\.SqliteCodebase\.Migrations\.MigrateSchema1To2\.DbHelpers\.syncCausalHash$''',
    '''^Unison\.Codebase\.SqliteCodebase\.Operations\.prettyBufferEntry$''',
    '''^Unison\.Codebase\.SqliteCodebase\.Operations\.addDeclComponentTypeIndex$''',
    '''^Unison\.Codebase\.SqliteCodebase\.Operations\.getPatch$''',
    '''^Unison\.Codebase\.SqliteCodebase\.Operations\.putPatch$''',
    '''^Unison\.Codebase\.SqliteCodebase\.Operations\.patchExists$''',
    '''^Unison\.Codebase\.SqliteCodebase\.Operations\.termReferencesByPrefix$''',
    '''^Unison\.Codebase\.SqliteCodebase\.Operations\.termExists$''',
    '''^Unison\.Codebase\.SqliteCodebase\.Operations\.declExists$''',
    '''^Unison\.Codebase\.SqliteCodebase\.Operations\.before$''',
    '''^Unison\.Codebase\.SqliteCodebase\.Operations\.ensureNameLookupForBranchHash$''',
    '''^Unison\.Codebase\.SqliteCodebase\.Operations\.regenerateNameLookup$''',
    '''^Unison\.Codebase\.TermEdit\.references$''',
    '''^Unison\.Codebase\.TermEdit\.isTypePreserving$''',
    '''^Unison\.Codebase\.TermEdit\.isSame$''',
    '''^Unison\.Codebase\.TypeEdit\.references$''',
    '''^Unison\.CommandLine\.BranchRelativePath\.toText$''',
    '''^Unison\.CommandLine\.Completion\.prettyCompletion$''',
    '''^Unison\.CommandLine\.Completion\.fixupCompletion$''',
    '''^Unison\.CommandLine\.FZFResolvers\.projectBranchWithinCurrentProjectResolver$''',
    '''^Unison\.CommandLine\.FZFResolvers\.projectNameResolver$''',
    '''^Unison\.CommandLine\.FZFResolvers\.projectBranchOptionsWithinCurrentProject$''',
    '''^Unison\.CommandLine\.Helpers\.warnNote$''',
    '''^Unison\.CommandLine\.Helpers\.problem$''',
    '''^Unison\.CommandLine\.Helpers\.nothingTodo$''',
    '''^Unison\.CommandLine\.Helpers\.plural$''',
    '''^Unison\.CommandLine\.InputPattern\.minArgs$''',
    '''^Unison\.CommandLine\.InputPattern\.maxArgs$''',
    '''^Unison\.CommandLine\.InputPattern\.suggestionFallbacks$''',
    '''^Unison\.CommandLine\.InputPatterns\._handleBranchIdOrProjectArg$''',
    '''^Unison\.CommandLine\.OutputMessages\.prettyEntityType$''',
    '''^Unison\.CommandLine\.OutputMessages\.pushPublicNote$''',
    '''^Unison\.CommandLine\.OutputMessages\.noWritePermissionForPath$''',
    '''^Unison\.CommandLine\.OutputMessages\.notFastForward$''',
    '''^Unison\.CommandLine\.OutputMessages\.filestatusTip$''',
    '''^Unison\.DataDeclaration\.labeledDeclTypeDependencies$''',
    '''^Unison\.DataDeclaration\.labeledDeclDependenciesIncludingSelf$''',
    '''^Unison\.DataDeclaration\.bindReferences$''',
    '''^Unison\.DataDeclaration\.labeledTypeDependencies$''',
    '''^Unison\.DataDeclaration\.Dependencies\.labeledDeclDependenciesIncludingSelfAndFieldAccessors$''',
    '''^Unison\.DataDeclaration\.Dependencies\.fieldAccessorRefs$''',
    '''^Unison\.Debug\.debug$''',
    '''^Unison\.Debug\.debugLog$''',
    '''^Unison\.HashQualified\.sortByLength$''',
    '''^Unison\.HashQualified\.hasName$''',
    '''^Unison\.HashQualified\.hasHash$''',
    '''^Unison\.HashQualified\.toStringWith$''',
    '''^Unison\.HashQualified\.matchesNamedReferent$''',
    '''^Unison\.HashQualified\.matchesNamedReference$''',
    '''^Unison\.HashQualifiedPrime\.fromHQ$''',
    '''^Unison\.HashQualifiedPrime\.toNameOnly$''',
    '''^Unison\.HashQualifiedPrime\.toHash$''',
    '''^Unison\.HashQualifiedPrime\.toStringWith$''',
    '''^Unison\.HashQualifiedPrime\.fromNameHash$''',
    '''^Unison\.HashQualifiedPrime\.sortByLength$''',
    '''^Unison\.Hashable\.hash$''',
    '''^Unison\.Hashing\.V2\.Type\.intRef$''',
    '''^Unison\.Hashing\.V2\.Type\.natRef$''',
    '''^Unison\.Hashing\.V2\.Type\.floatRef$''',
    '''^Unison\.Hashing\.V2\.Type\.booleanRef$''',
    '''^Unison\.Hashing\.V2\.Type\.textRef$''',
    '''^Unison\.Hashing\.V2\.Type\.charRef$''',
    '''^Unison\.Hashing\.V2\.Type\.listRef$''',
    '''^Unison\.Hashing\.V2\.Type\.effectRef$''',
    '''^Unison\.KindInference\.Constraint\.Solved\.prov$''',
    '''^Unison\.KindInference\.Constraint\.Solved\.loc$''',
    '''^Unison\.KindInference\.Constraint\.TypeProvenance\.prov$''',
    '''^Unison\.KindInference\.Generate\.typeConstraints$''',
    '''^Unison\.LSP\.FileAnalysis\.getFileDefLocations$''',
    '''^Unison\.LSP\.FileAnalysis\.getFileNames$''',
    '''^Unison\.LSP\.HandlerUtils\.cancelRequest$''',
    '''^Unison\.LSP\.Types\.logInfo$''',
    '''^Unison\.LSP\.Types\.logError$''',
    '''^Unison\.LSP\.Types\.lspBackend$''',
    '''^Unison\.LSP\.Types\.setConfig$''',
    '''^Unison\.LabeledDependency\.referents$''',
    '''^Unison\.Merge\.EitherWayI\.includingAlice$''',
    '''^Unison\.Merge\.EitherWayI\.excludingAlice$''',
    '''^Unison\.Merge\.Synhash\.synhashTerm$''',
    '''^Unison\.Merge\.Synhash\.synhashType$''',
    '''^Unison\.Merge\.TwoWay\.unzipMap$''',
    '''^Unison\.Merge\.TwoWay\.fromPair$''',
    '''^Unison\.Name\.tryStripReversedPrefix$''',
    '''^Unison\.Name\.isPrefixOf$''',
    '''^Unison\.Name\.sortNames$''',
    '''^Unison\.Name\.Forward\.stripNamePrefix$''',
    '''^Unison\.Names\.makeRelative$''',
    '''^Unison\.Names\.termReferents$''',
    '''^Unison\.Names\.restrictReferences$''',
    '''^Unison\.Names\.refTermsHQNamed$''',
    '''^Unison\.Names\.addType$''',
    '''^Unison\.Names\.addTerm$''',
    '''^Unison\.Names\.filterByHQs$''',
    '''^Unison\.Names\.filterBySHs$''',
    '''^Unison\.Names\.filterTypes$''',
    '''^Unison\.NamesWithHistory\.push$''',
    '''^Unison\.NamesWithHistory\.lookupHQType'$''',
    '''^Unison\.NamesWithHistory\.hasTermNamed$''',
    '''^Unison\.NamesWithHistory\.lookupHQTerm'$''',
    '''^Unison\.Parsers\.readAndParseFile$''',
    '''^Unison\.Parsers\.unsafeParseTerm$''',
    '''^Unison\.Parsers\.unsafeReadAndParseFile$''',
    '''^Unison\.Parsers\.unsafeParseFileBuiltinsOnly$''',
    '''^Unison\.Pattern\.application$''',
    '''^Unison\.Pattern\.labeledDependencies$''',
    '''^Unison\.PatternMatchCoverage\.IntervalSet\.member$''',
    '''^Unison\.PatternMatchCoverage\.IntervalSet\.foldr$''',
    '''^Unison\.PatternMatchCoverage\.IntervalSet\.map$''',
    '''^Unison\.PatternMatchCoverage\.IntervalSet\.intersection$''',
    '''^Unison\.PatternMatchCoverage\.IntervalSet\.extractSingleton$''',
    '''^Unison\.PatternMatchCoverage\.ListPat\.prettyListPat$''',
    '''^Unison\.PatternMatchCoverage\.Literal\.prettyLiteral$''',
    '''^Unison\.Prelude\.onFalse$''',
    '''^Unison\.Prelude\.onFalseM$''',
    '''^Unison\.Prelude\.wundefined$''',
    '''^Unison\.PrettyPrintEnv\.union$''',
    '''^Unison\.PrettyPrintEnv\.MonadPretty\.withPPE$''',
    '''^Unison\.PrettyPrintEnv\.MonadPretty\.applyPPE$''',
    '''^Unison\.PrettyPrintEnv\.MonadPretty\.modifyPPE$''',
    '''^Unison\.PrettyPrintEnvDecl\.empty$''',
    '''^Unison\.PrettyTerminal\.stripSurroundingBlanks$''',
    '''^Unison\.PrintError\._posToEnglish$''',
    '''^Unison\.PrintError\._printPosRange$''',
    '''^Unison\.PrintError\._printArrowsAtPos$''',
    '''^Unison\.Project\.projectBranchNameUserSlug$''',
    '''^Unison\.Reference\.component$''',
    '''^Unison\.Reference\.components$''',
    '''^Unison\.Reference\.groupByComponent$''',
    '''^Unison\.Referent\.toId$''',
    '''^Unison\.Referent\.fromId$''',
    '''^Unison\.Referent\.fold$''',
    '''^Unison\.ReferentPrime\.toTermReference$''',
    '''^Unison\.ReferentPrime\.fold$''',
    '''^Unison\.Result\.isSuccess$''',
    '''^Unison\.Result\.isFailure$''',
    '''^Unison\.Result\.toMaybe$''',
    '''^Unison\.Result\.getResult$''',
    '''^Unison\.Result\.toEither$''',
    '''^Unison\.Runtime\.ANF\.minimizeCyclesOrCrash$''',
    '''^Unison\.Runtime\.ANF\.unbind$''',
    '''^Unison\.Runtime\.Array\.checkIMPArray$''',
    '''^Unison\.Runtime\.Array\.readPrimArray$''',
    '''^Unison\.Runtime\.Array\.writePrimArray$''',
    '''^Unison\.Runtime\.Debug\.traceComb$''',
    '''^Unison\.Runtime\.Debug\.traceCombs$''',
    '''^Unison\.Runtime\.Debug\.tracePretty$''',
    '''^Unison\.Runtime\.Debug\.tracePrettyGroup$''',
    '''^Unison\.Runtime\.IOSource\.abilityNamedId$''',
    '''^Unison\.Runtime\.IOSource\.eitherReference$''',
    '''^Unison\.Runtime\.IOSource\.optionReference$''',
    '''^Unison\.Runtime\.IOSource\.isTestReference$''',
    '''^Unison\.Runtime\.IOSource\.isPropagatedReference$''',
    '''^Unison\.Runtime\.IOSource\.isTest$''',
    '''^Unison\.Runtime\.IOSource\.isIOTest$''',
    '''^Unison\.Runtime\.IOSource\.eitherLeftId$''',
    '''^Unison\.Runtime\.IOSource\.eitherRightId$''',
    '''^Unison\.Runtime\.IOSource\.someId$''',
    '''^Unison\.Runtime\.IOSource\.noneId$''',
    '''^Unison\.Runtime\.IOSource\.doc2TermRef$''',
    '''^Unison\.Runtime\.IOSource\.prettyRef$''',
    '''^Unison\.Runtime\.IOSource\.constructorName$''',
    '''^Unison\.Runtime\.MCode\.rCombToComb$''',
    '''^Unison\.Runtime\.MCode\.indent$''',
    '''^Unison\.Runtime\.MCode\.prettyCombs$''',
    '''^Unison\.Runtime\.MCode\.prettyComb$''',
    '''^Unison\.Runtime\.MCode\.prettySection$''',
    '''^Unison\.Runtime\.MCode\.prettyIx$''',
    '''^Unison\.Runtime\.MCode\.prettyBranches$''',
    '''^Unison\.Runtime\.MCode\.un$''',
    '''^Unison\.Runtime\.MCode\.bx$''',
    '''^Unison\.Runtime\.MCode\.prettyIns$''',
    '''^Unison\.Runtime\.MCode\.prettyArgs$''',
    '''^Unison\.Runtime\.Machine\.refNumTy$''',
    '''^Unison\.Runtime\.Machine\.refNumTy'$''',
    '''^Unison\.Runtime\.Machine\.stk'info$''',
    '''^Unison\.Runtime\.Machine\.jump0$''',
    '''^Unison\.Runtime\.Machine\.lookupDenv$''',
    '''^Unison\.Runtime\.Machine\.peekForeign$''',
    '''^Unison\.Runtime\.Machine\.discardCont$''',
    '''^Unison\.Runtime\.Machine\.reserveIds$''',
    '''^Unison\.Runtime\.Serialize\.putBool$''',
    '''^Unison\.Runtime\.Serialize\.getBool$''',
    '''^Unison\.Runtime\.SparseVector\.map$''',
    '''^Unison\.Runtime\.SparseVector\.mask$''',
    '''^Unison\.Runtime\.SparseVector\.zipWith$''',
    '''^Unison\.Runtime\.SparseVector\._1$''',
    '''^Unison\.Runtime\.SparseVector\._2$''',
    '''^Unison\.Runtime\.SparseVector\.unzip$''',
    '''^Unison\.Runtime\.SparseVector\.choose$''',
    '''^Unison\.Runtime\.SparseVector\.merge$''',
    '''^Unison\.Runtime\.SparseVector\.eq$''',
    '''^Unison\.Runtime\.Stack\.peekN$''',
    '''^Unison\.Runtime\.Stack\.peekD$''',
    '''^Unison\.Runtime\.Stack\.peekBi$''',
    '''^Unison\.Runtime\.Stack\.frameView$''',
    '''^Unison\.Runtime\.Vector\.mu$''',
    '''^Unison\.Runtime\.Vector\.bound$''',
    '''^Unison\.Runtime\.Vector\.toList$''',
    '''^Unison\.Server\.Backend\.termEntryLabeledDependencies$''',
    '''^Unison\.Server\.Backend\.typeEntryLabeledDependencies$''',
    '''^Unison\.Server\.Backend\.isTestResultList$''',
    '''^Unison\.Server\.Backend\.resultListType$''',
    '''^Unison\.Server\.Backend\.fixupNamesRelative$''',
    '''^Unison\.Server\.Backend\.definitionResultsDependencies$''',
    '''^Unison\.Server\.Backend\.getShallowCausalAtPathFromRootHash$''',
    '''^Unison\.Server\.Backend\.resolveRootBranchHash$''',
    '''^Unison\.Server\.CodebaseServer\.unisonAndDocsAPI$''',
    '''^Unison\.Server\.Doc\.evalAndRenderDoc$''',
    '''^Unison\.Server\.Doc\.dependencies$''',
    '''^Unison\.Server\.Doc\.dependenciesSpecial$''',
    '''^Unison\.Server\.Errors\.badHQN$''',
    '''^Unison\.Server\.NameSearch\.hoistSearch$''',
    '''^Unison\.Server\.NameSearch\.hoistNameSearch$''',
    '''^Unison\.Server\.NameSearch\.Sqlite\.nameSearchForPerspective$''',
    '''^Unison\.Server\.NameSearch\.Sqlite\.resolveShortHash$''',
    '''^Unison\.Server\.SearchResult\.aliases$''',
    '''^Unison\.Server\.SearchResult\.truncateAliases$''',
    '''^Unison\.Server\.SearchResult\._fromNames$''',
    '''^Unison\.Server\.SearchResultPrime\.tmReferent$''',
    '''^Unison\.Server\.SearchResultPrime\.tpReference$''',
    '''^Unison\.Server\.SearchResultPrime\.labeledDependencies$''',
    '''^Unison\.Server\.Syntax\.syntax$''',
    '''^Unison\.Server\.Types\.exactToHQ$''',
    '''^Unison\.Server\.Types\.exactToHQ'$''',
    '''^Unison\.Server\.Types\.unisonRefToText$''',
    '''^Unison\.Server\.Types\.discard$''',
    '''^Unison\.Server\.Types\.branchToUnisonHash$''',
    '''^Unison\.Settings\.renderTermMaxLength$''',
    '''^Unison\.Settings\.demoHideVarNumber$''',
    '''^Unison\.Sqlite\.Connection\.queryStreamRow$''',
    '''^Unison\.Sqlite\.Connection\.queryStreamCol$''',
    '''^Unison\.Sqlite\.Connection\.withSavepoint$''',
    '''^Unison\.Sqlite\.DataVersion\.getDataVersion$''',
    '''^Unison\.Sqlite\.Exception\.isCantOpenException$''',
    '''^Unison\.Sqlite\.Sql\.sql$''',
    '''^Unison\.Sqlite\.Sql\.sqlQQ$''',
    '''^Unison\.Sqlite\.Sql\.inSql$''',
    '''^Unison\.Sqlite\.Transaction\.unTransactionWithMonadIO$''',
    '''^Unison\.Sqlite\.Transaction\.runReadOnlyTransaction$''',
    '''^Unison\.Sqlite\.Transaction\.runReadOnlyTransaction_$''',
    '''^Unison\.Sqlite\.Transaction\.cacheTransaction$''',
    '''^Unison\.Sqlite\.Transaction\.queryStreamRow$''',
    '''^Unison\.Sqlite\.Transaction\.queryStreamCol$''',
    '''^Unison\.Sqlite\.Transaction\.queryListRowCheck$''',
    '''^Unison\.Sqlite\.Transaction\.queryMaybeRowCheck$''',
    '''^Unison\.Sync\.API\.api$''',
    '''^Unison\.Sync\.Common\.causalHashToHash32$''',
    '''^Unison\.Sync\.Types\.pathCodebasePath$''',
    '''^Unison\.Sync\.Types\.patchOldHashes_$''',
    '''^Unison\.Syntax\.Lexer\.Unison\.debugFilePreParse$''',
    '''^Unison\.Syntax\.NamePrinter\.prettyLabeledDependency$''',
    '''^Unison\.Syntax\.TermPrinter\.prettyBinding'$''',
    '''^Unison\.Syntax\.TypePrinter\.prettySignaturesAlt'$''',
    '''^Unison\.Syntax\.TypePrinter\.prettySignaturesAlt$''',
    '''^Unison\.Term\.vmap$''',
    '''^Unison\.Term\.wrapV$''',
    '''^Unison\.Term\.allVars$''',
    '''^Unison\.Term\.freeTypeVars$''',
    '''^Unison\.Term\.fresh$''',
    '''^Unison\.Term\.var'$''',
    '''^Unison\.Term\.watch$''',
    '''^Unison\.Term\.watchMaybe$''',
    '''^Unison\.Term\.placeholder$''',
    '''^Unison\.Term\.app_$''',
    '''^Unison\.Term\.ann_$''',
    '''^Unison\.Term\.letRec_$''',
    '''^Unison\.Term\.unAnds$''',
    '''^Unison\.Term\.unOrs$''',
    '''^Unison\.Term\.unOverappliedBinaryAppPred$''',
    '''^Unison\.Term\.unBinaryApps$''',
    '''^Unison\.Term\.unBinaryAppsPred$''',
    '''^Unison\.Term\.betaReduce$''',
    '''^Unison\.Term\.betaNormalForm$''',
    '''^Unison\.Term\.containsExpression$''',
    '''^Unison\.Type\.wrapV$''',
    '''^Unison\.Type\.bindReferences$''',
    '''^Unison\.Type\.unPure$''',
    '''^Unison\.Type\.isArrow$''',
    '''^Unison\.Type\.derivedBase32Hex$''',
    '''^Unison\.Type\.iff$''',
    '''^Unison\.Type\.iff'$''',
    '''^Unison\.Type\.andor$''',
    '''^Unison\.Type\.v'$''',
    '''^Unison\.Type\.forAll'$''',
    '''^Unison\.Type\.flipApply$''',
    '''^Unison\.Type\.unforall$''',
    '''^Unison\.Type\.usesEffects$''',
    '''^Unison\.Type\.functionResult$''',
    '''^Unison\.Typechecker\.check$''',
    '''^Unison\.Typechecker\.wellTyped$''',
    '''^Unison\.Typechecker\.Context\._logContext$''',
    '''^Unison\.Typechecker\.Context\.isEqual$''',
    '''^Unison\.Typechecker\.Extractor\.traceSubseq$''',
    '''^Unison\.Typechecker\.Extractor\.traceNote$''',
    '''^Unison\.Typechecker\.Extractor\._no$''',
    '''^Unison\.Typechecker\.Extractor\._any$''',
    '''^Unison\.Typechecker\.Extractor\._any'$''',
    '''^Unison\.Typechecker\.Extractor\.inSynthesize$''',
    '''^Unison\.Typechecker\.Extractor\.inEquate$''',
    '''^Unison\.Typechecker\.Extractor\.illFormedType$''',
    '''^Unison\.Typechecker\.Extractor\.effectConstructorWrongArgCount$''',
    '''^Unison\.Typechecker\.Extractor\.malformedEffectBind$''',
    '''^Unison\.Typechecker\.Extractor\.solvedBlank$''',
    '''^Unison\.Typechecker\.Extractor\.infoNote$''',
    '''^Unison\.Typechecker\.Extractor\.topLevelComponent$''',
    '''^Unison\.Typechecker\.TypeError\.topLevelComponent$''',
    '''^Unison\.Typechecker\.TypeLookup\.unsafeConstructorType$''',
    '''^Unison\.Typechecker\.TypeLookup\.constructorType$''',
    '''^Unison\.UnisonFile\.termSignatureExternalLabeledDependencies$''',
    '''^Unison\.Util\.AnnotatedText\.deannotate$''',
    '''^Unison\.Util\.AnnotatedText\.trailingNewLine$''',
    '''^Unison\.Util\.AnnotatedText\.textLength$''',
    '''^Unison\.Util\.AnnotatedText\.textEmpty$''',
    '''^Unison\.Util\.BiMultimap\.empty$''',
    '''^Unison\.Util\.BiMultimap\.isEmpty$''',
    '''^Unison\.Util\.BiMultimap\.memberDom$''',
    '''^Unison\.Util\.BiMultimap\.unsafeLookupRan$''',
    '''^Unison\.Util\.BiMultimap\.unsafeTraverseDom$''',
    '''^Unison\.Util\.BiMultimap\.filter$''',
    '''^Unison\.Util\.BiMultimap\.filterDom$''',
    '''^Unison\.Util\.BiMultimap\.filterDomain$''',
    '''^Unison\.Util\.BiMultimap\.restrictDom$''',
    '''^Unison\.Util\.BiMultimap\.withoutDom$''',
    '''^Unison\.Util\.BiMultimap\.withoutRan$''',
    '''^Unison\.Util\.BiMultimap\.unsafeFromDomain$''',
    '''^Unison\.Util\.BiMultimap\.invertDomain$''',
    '''^Unison\.Util\.BiMultimap\.ran$''',
    '''^Unison\.Util\.BiMultimap\.toRelation$''',
    '''^Unison\.Util\.BiMultimap\.insert$''',
    '''^Unison\.Util\.BiMultimap\.upsertFunc$''',
    '''^Unison\.Util\.BiMultimap\.unsafeInsert$''',
    '''^Unison\.Util\.BiMultimap\.deriveRangeFromDomain$''',
    '''^Unison\.Util\.Bytes\.null$''',
    '''^Unison\.Util\.Bytes\.isAscii$''',
    '''^Unison\.Util\.Bytes\.chunkSize$''',
    '''^Unison\.Util\.Bytes\.cons$''',
    '''^Unison\.Util\.Bytes\.index$''',
    '''^Unison\.Util\.Bytes\.arrayFromChunk$''',
    '''^Unison\.Util\.ColorText\.unstyled$''',
    '''^Unison\.Util\.ColorText\.toHTML$''',
    '''^Unison\.Util\.CycleTable\.new$''',
    '''^Unison\.Util\.CycleTable\.lookup$''',
    '''^Unison\.Util\.CycleTable\.insert$''',
    '''^Unison\.Util\.CycleTable\.size$''',
    '''^Unison\.Util\.CycleTable\.insertEnd$''',
    '''^Unison\.Util\.CyclicEq\.bothEq'$''',
    '''^Unison\.Util\.CyclicOrd\.bothOrd'$''',
    '''^Unison\.Util\.Defns\.hoistDefnsF$''',
    '''^Unison\.Util\.Defns\.mapDefns$''',
    '''^Unison\.Util\.Defns\.unzipDefns$''',
    '''^Unison\.Util\.Defns\.unzipDefnsWith$''',
    '''^Unison\.Util\.Defns\.zipDefns$''',
    '''^Unison\.Util\.EnumContainers\.unionWith$''',
    '''^Unison\.Util\.EnumContainers\.intersectionWith$''',
    '''^Unison\.Util\.EnumContainers\.traverseWithKey$''',
    '''^Unison\.Util\.Exception\.tryAny$''',
    '''^Unison\.Util\.Exception\.catchAny$''',
    '''^Unison\.Util\.Find\.fuzzyFinder$''',
    '''^Unison\.Util\.Find\.simpleFuzzyFinder$''',
    '''^Unison\.Util\.Find\.highlightSimple$''',
    '''^Unison\.Util\.Find\.fuzzyFindMatchArray$''',
    '''^Unison\.Util\.Find\.prefixFindInBranch$''',
    '''^Unison\.Util\.Find\.fuzzyFindInBranch$''',
    '''^Unison\.Util\.Find\.getName$''',
    '''^Unison\.Util\.Find\.candidates$''',
    '''^Unison\.Util\.Find\.highlight$''',
    '''^Unison\.Util\.Find\.highlight'$''',
    '''^Unison\.Util\.List\.safeHead$''',
    '''^Unison\.Util\.Logger\.atomic$''',
    '''^Unison\.Util\.Logger\.toHandle$''',
    '''^Unison\.Util\.Logger\.toStandardError$''',
    '''^Unison\.Util\.Logger\.toStandardOut$''',
    '''^Unison\.Util\.Logger\.logHandleAt$''',
    '''^Unison\.Util\.Logger\.logAt'$''',
    '''^Unison\.Util\.Logger\.logAt$''',
    '''^Unison\.Util\.Logger\.scope$''',
    '''^Unison\.Util\.Logger\.scope'$''',
    '''^Unison\.Util\.Logger\.logger$''',
    '''^Unison\.Util\.Logger\.error$''',
    '''^Unison\.Util\.Logger\.warn$''',
    '''^Unison\.Util\.Logger\.info$''',
    '''^Unison\.Util\.Logger\.debug$''',
    '''^Unison\.Util\.Logger\.trace$''',
    '''^Unison\.Util\.Logger\.error'$''',
    '''^Unison\.Util\.Logger\.warn'$''',
    '''^Unison\.Util\.Logger\.info'$''',
    '''^Unison\.Util\.Logger\.debug'$''',
    '''^Unison\.Util\.Logger\.trace'$''',
    '''^Unison\.Util\.Logger\.debugLevel$''',
    '''^Unison\.Util\.Logger\.errorLevel$''',
    '''^Unison\.Util\.Logger\.infoLevel$''',
    '''^Unison\.Util\.Logger\.traceLevel$''',
    '''^Unison\.Util\.Logger\.warnLevel$''',
    '''^Unison\.Util\.Logger\.at$''',
    '''^Unison\.Util\.Logger\.atDebug$''',
    '''^Unison\.Util\.Logger\.atError$''',
    '''^Unison\.Util\.Logger\.atInfo$''',
    '''^Unison\.Util\.Logger\.atTrace$''',
    '''^Unison\.Util\.Logger\.atWarn$''',
    '''^Unison\.Util\.Logger\.increment$''',
    '''^Unison\.Util\.Logger\.decrement$''',
    '''^Unison\.Util\.Map\.alignWithKey$''',
    '''^Unison\.Util\.Map\.insertLookup$''',
    '''^Unison\.Util\.Map\.invert$''',
    '''^Unison\.Util\.Map\.upsertLookup$''',
    '''^Unison\.Util\.Map\.elemsSet$''',
    '''^Unison\.Util\.Map\.foldM$''',
    '''^Unison\.Util\.Map\.for_$''',
    '''^Unison\.Util\.Map\.traverseKeysWith$''',
    '''^Unison\.Util\.Monoid\.fromMaybe$''',
    '''^Unison\.Util\.Monoid\.isEmpty$''',
    '''^Unison\.Util\.Monoid\.nonEmpty$''',
    '''^Unison\.Util\.Pretty\.orElses$''',
    '''^Unison\.Util\.Pretty\.toHTML$''',
    '''^Unison\.Util\.Pretty\.oxfordCommas$''',
    '''^Unison\.Util\.Pretty\.sepSpaced$''',
    '''^Unison\.Util\.Pretty\.excerptSep$''',
    '''^Unison\.Util\.Pretty\.commented$''',
    '''^Unison\.Util\.Pretty\.numberedHeader$''',
    '''^Unison\.Util\.Pretty\.numberedColumn2Header$''',
    '''^Unison\.Util\.Pretty\.leftPad$''',
    '''^Unison\.Util\.Pretty\.excerptColumn2Headed$''',
    '''^Unison\.Util\.Pretty\.excerptColumn2$''',
    '''^Unison\.Util\.Pretty\.column3Header$''',
    '''^Unison\.Util\.Pretty\.column3M$''',
    '''^Unison\.Util\.Pretty\.column3UnzippedM$''',
    '''^Unison\.Util\.Pretty\.softHangNoSpace'$''',
    '''^Unison\.Util\.Pretty\.hangUngrouped'$''',
    '''^Unison\.Util\.Pretty\.hangUngrouped$''',
    '''^Unison\.Util\.Pretty\.nest$''',
    '''^Unison\.Util\.Pretty\.boxForkLeft$''',
    '''^Unison\.Util\.Pretty\.lBoxStyle1$''',
    '''^Unison\.Util\.Pretty\.boxLeftM$''',
    '''^Unison\.Util\.Pretty\.boxRightM$''',
    '''^Unison\.Util\.Pretty\.singleQuoted'$''',
    '''^Unison\.Util\.Range\.isMultiLine$''',
    '''^Unison\.Util\.Recursion\.para$''',
    '''^Unison\.Util\.Relation\.difference1$''',
    '''^Unison\.Util\.Relation\.toSet$''',
    '''^Unison\.Util\.Relation\.outerJoinRanMultimaps$''',
    '''^Unison\.Util\.Relation\.joinDom$''',
    '''^Unison\.Util\.Relation\.joinRan$''',
    '''^Unison\.Util\.Relation\.foldlStrict$''',
    '''^Unison\.Util\.Relation\.unions$''',
    '''^Unison\.Util\.Relation\.filterDomM$''',
    '''^Unison\.Util\.Relation\.filterRanM$''',
    '''^Unison\.Util\.Relation\.filterM$''',
    '''^Unison\.Util\.Relation\.notMember$''',
    '''^Unison\.Util\.Relation\.manyRan$''',
    '''^Unison\.Util\.Relation\.compactSet$''',
    '''^Unison\.Util\.Relation\.<$|$''',
    '''^Unison\.Util\.Relation\.|$>$''',
    '''^Unison\.Util\.Relation\.subtractRan$''',
    '''^Unison\.Util\.Relation\.replaceRan$''',
    '''^Unison\.Util\.Relation\.updateDom$''',
    '''^Unison\.Util\.Relation\.updateRan$''',
    '''^Unison\.Util\.Relation\.deleteRanWhere$''',
    '''^Unison\.Util\.Relation\.deleteDomWhere$''',
    '''^Unison\.Util\.Relation\.mapDomMonotonic$''',
    '''^Unison\.Util\.Relation\.mapRanMonotonic$''',
    '''^Unison\.Util\.Relation\.fromSet$''',
    '''^Unison\.Util\.Relation\.bimap$''',
    '''^Unison\.Util\.Relation\.bitraverse$''',
    '''^Unison\.Util\.Relation\.toUnzippedMultimap$''',
    '''^Unison\.Util\.Relation\.collectRan$''',
    '''^Unison\.Util\.Relation3\.d1s$''',
    '''^Unison\.Util\.Relation3\.d2s$''',
    '''^Unison\.Util\.Relation3\.d3s$''',
    '''^Unison\.Util\.Relation3\.d23$''',
    '''^Unison\.Util\.Relation3\.filter$''',
    '''^Unison\.Util\.Relation3\.mapD1Monotonic$''',
    '''^Unison\.Util\.Relation3\.mapD2Monotonic$''',
    '''^Unison\.Util\.Relation3\.member$''',
    '''^Unison\.Util\.Relation3\.memberD2$''',
    '''^Unison\.Util\.Relation3\.lookupD1$''',
    '''^Unison\.Util\.Relation3\.lookupD2$''',
    '''^Unison\.Util\.Relation3\.lookupD3$''',
    '''^Unison\.Util\.Relation3\.size$''',
    '''^Unison\.Util\.Relation3\.nestD12$''',
    '''^Unison\.Util\.Relation3\.fromNestedDom$''',
    '''^Unison\.Util\.Relation3\.fromNestedRan$''',
    '''^Unison\.Util\.Relation3\.null$''',
    '''^Unison\.Util\.Relation3\.deleteAll$''',
    '''^Unison\.Util\.Relation3\.difference$''',
    '''^Unison\.Util\.Relation3\.delete$''',
    '''^Unison\.Util\.Relation4\.size$''',
    '''^Unison\.Util\.Relation4\.null$''',
    '''^Unison\.Util\.Relation4\.filter$''',
    '''^Unison\.Util\.Relation4\.memberD13$''',
    '''^Unison\.Util\.Relation4\.selectD3$''',
    '''^Unison\.Util\.Relation4\.selectD34$''',
    '''^Unison\.Util\.Relation4\.restrict34d12$''',
    '''^Unison\.Util\.Relation4\.keys$''',
    '''^Unison\.Util\.Relation4\.lookupD1$''',
    '''^Unison\.Util\.Relation4\.lookupD2$''',
    '''^Unison\.Util\.Relation4\.d1set$''',
    '''^Unison\.Util\.Relation4\.d12$''',
    '''^Unison\.Util\.Relation4\.d13$''',
    '''^Unison\.Util\.Relation4\.d34$''',
    '''^Unison\.Util\.Relation4\.d234$''',
    '''^Unison\.Util\.Relation4\.d12s$''',
    '''^Unison\.Util\.Relation4\.d3s$''',
    '''^Unison\.Util\.Relation4\.d4s$''',
    '''^Unison\.Util\.Relation4\.delete$''',
    '''^Unison\.Util\.Relation4\.mapD2Monotonic$''',
    '''^Unison\.Util\.Rope\.singleton$''',
    '''^Unison\.Util\.Rope\.traverse$''',
    '''^Unison\.Util\.Rope\.null$''',
    '''^Unison\.Util\.Rope\.unsnoc$''',
    '''^Unison\.Util\.Set\.symmetricDifference$''',
    '''^Unison\.Util\.Set\.forMaybe$''',
    '''^Unison\.Util\.Set\.filterM$''',
    '''^Unison\.Util\.TQueue\.size$''',
    '''^Unison\.Util\.TQueue\.awaitSize$''',
    '''^Unison\.Util\.TQueue\.dequeueN$''',
    '''^Unison\.Util\.TQueue\.raceIO$''',
    '''^Unison\.Util\.TQueue\.tryPeekWhile$''',
    '''^Unison\.Util\.TQueue\.takeWhile$''',
    '''^Unison\.Util\.TQueue\.peekWhile$''',
    '''^Unison\.Util\.Text\.unsnocChunk$''',
    '''^Unison\.Util\.Text\.Pattern\.charNotInPred$''',
    '''^Unison\.Util\.Timing\.unsafeTime$''',
    '''^Unison\.Util\.TransitiveClosure\.transitiveClosure'$''',
    '''^Unison\.Util\.TransitiveClosure\.transitiveClosure1$''',
    '''^Unison\.Util\.TransitiveClosure\.transitiveClosure1'$''',
    '''^Unison\.Test\.CodebaseInit\.writeTranscriptOutput$''',
    '''^Unison\.Test\.ColorText\.ex4e$''',
    '''^Unison\.Test\.ColorText\.ex4t$''',
    '''^Unison\.Test\.ColorText\.ex2$''',
    '''^Unison\.Test\.ColorText\.renderEx2$''',
    '''^Unison\.Test\.ColorText\.ex3$''',
    '''^Unison\.Test\.ColorText\.ex4$''',
    '''^Unison\.Test\.ColorText\.ex$''',
    '''^Unison\.Test\.Runtime\.ANF\.simpleRefs$''',
    '''^Unison\.Test\.Runtime\.ANF\.denormalizeRef$''',
    '''^Unison\.Test\.Runtime\.ANF\.backReference$''',
    '''^Unison\.Test\.Runtime\.MCode\.dummyRef$''',
    '''^Unison\.Test\.Runtime\.MCode\.modifyTVarTest$''',
    '''^Unison\.Test\.Syntax\.FileParser\.test2$''',
    '''^Unison\.Test\.Syntax\.TypePrinter\.tc_breaks$''',
    '''^Unison\.Test\.Typechecker\.Components\.test$''',
    '''^Unison\.Test\.Ucm\.deleteCodebase$''',
    '''^Unison\.Test\.UriParser\.mkPath$''',
    '''^Unison\.Test\.UriParser\.sch$''',
]
type-class-roots = true
